{{- if .Values.dataService.enabled }}
{{- if .Capabilities.APIVersions.Has "apps/v1beta1" }}
apiVersion: apps/v1beta1
{{- else }}
apiVersion: apps/v1
{{- end }}
kind: Deployment
metadata:
  name: data-service
spec:
  minReadySeconds: 60
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: data-service
  replicas: {{ .Values.dataService.replicasCount }}
  template:
    metadata:
      labels:
        app: data-service
    spec:
      imagePullSecrets:
        - name: docker-registry-creds
      containers:
        - name: data-service
          image: {{ .Values.dataService.image }}:{{ .Values.dataService.imageTag }}
          imagePullPolicy: {{ .Values.dataService.imagePullPolicy }}
          env:
            - name: DEFAULT_MATCHER
              value: {{ .Values.dataService.defaultMatcherAddress }}
            - name: PGHOST
              value: {{ template "postgresHost" . }}
            - name: PGPORT
              value: {{ .Values.postgresql.service.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.postgresql.postgresDatabase }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-creds-{{ .Release.Name }}
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-creds-{{ .Release.Name }}
                  key: password
            - name: PGPOOLSIZE
              value: {{ .Values.dataService.pgPoolSize | quote }}
            - name: PORT
              value: {{ .Values.dataService.port | quote }}
            - name: DOCS_URL
              value: '{{ .Values.apiHttpProtocol }}://{{ .Values.apiHost }}/docs/'
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.dataService.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.dataService.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
          {{- with .Values.dataService.resources }}
{{ toYaml . | indent 10 }}
          {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
