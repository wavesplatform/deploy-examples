{{- if .Values.dataService.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: cache
data:
  nginx.conf: |
    worker_processes auto;
    events { worker_connections 4096; multi_accept on; }

    http {
      limit_conn_zone $remote_addr zone=perip:10m;
      limit_conn perip 100;
      limit_conn_status 429;
      limit_req_zone $remote_addr zone=rps_limit:1m rate=300r/s;
      limit_req zone=rps_limit burst=10;
      limit_req_status 429;

      #cache
      proxy_cache_path /tmp/cache levels=1:2 keys_zone=API:30m max_size=1g;
      proxy_temp_path /tmp/cache/tmp;
      proxy_cache API;
      proxy_cache_bypass $http_upgrade;
      add_header X-Cache-Status $upstream_cache_status;
      
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;

      gzip on;
      gzip_disable "msie6";
      gzip_comp_level 6;
      gzip_vary on;
      gzip_min_length 1400;
      gzip_proxied any;
      gzip_types application/json;
      gzip_buffers 16 8k;

      proxy_http_version 1.1;
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;

      upstream data-service { server data-service:{{ default 3000 .Values.dataService.port }}; }

      server {
        listen 80 default_server;
        server_name _;

        location /assets {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 1s;
        }

        location /aliases {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 1s;
        }

        location /pairs {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 1s;
        }

        location /candles {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 1s;
        }

        location /transactions {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 3s;
        }

        location /matchers {
          proxy_pass http://data-service$request_uri;
          proxy_cache_valid 200 302 404 1s;
        }

        location /version {
          proxy_pass http://data-service/version;
          proxy_cache_valid 200 302 404 1s;
        }

        location / {
          proxy_pass http://data-service/;
          proxy_cache_valid 200 302 404 1m;
        }
      }
    }
{{- end }}
