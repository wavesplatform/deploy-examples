{{- if .Values.dataService.enabled }}
{{- if .Capabilities.APIVersions.Has "apps/v1beta1" }}
apiVersion: apps/v1beta1
{{- else }}
apiVersion: apps/v1
{{- end }}
kind: Deployment
metadata:
  name: cache
spec:
  minReadySeconds: 30
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cache
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cache-config-map.yaml") . | sha256sum }}
      labels:
        app: cache
    spec:
      imagePullSecrets:
        - name: docker-registry-creds
      containers:
        - name: cache
          image: nginx:alpine
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          {{- with .Values.dataService.cache.resources }}
{{ toYaml . | indent 10 }}
          {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: cache
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
